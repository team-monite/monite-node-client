/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Monite from "../index";

export type RootSchema =
    | Monite.RootSchema.Person
    | Monite.RootSchema.Onboarding
    | Monite.RootSchema.Comment
    | Monite.RootSchema.Counterpart
    | Monite.RootSchema.EntityUser
    | Monite.RootSchema.Entity
    | Monite.RootSchema.EntityVatIds
    | Monite.RootSchema.CounterpartVatId
    | Monite.RootSchema.EntityBankAccount
    | Monite.RootSchema.Export
    | Monite.RootSchema.Mailbox
    | Monite.RootSchema.PayablesPurchaseOrder
    | Monite.RootSchema.PaymentReminder
    | Monite.RootSchema.OverdueReminder
    | Monite.RootSchema.Product
    | Monite.RootSchema.Project
    | Monite.RootSchema.Receivable
    | Monite.RootSchema.Reconciliation
    | Monite.RootSchema.Role
    | Monite.RootSchema.Tag
    | Monite.RootSchema.TodoTask
    | Monite.RootSchema.TodoTaskMute
    | Monite.RootSchema.Transaction
    | Monite.RootSchema.Workflow
    | Monite.RootSchema.ApprovalRequest
    | Monite.RootSchema.ApprovalPolicy
    | Monite.RootSchema.PaymentRecord
    | Monite.RootSchema.Payable;

export declare namespace RootSchema {
    interface Person extends Monite.CommonSchema {
        object_type: "person";
    }

    interface Onboarding extends Monite.CommonSchema {
        object_type: "onboarding";
    }

    interface Comment extends Monite.CommonSchema {
        object_type: "comment";
    }

    interface Counterpart extends Monite.CommonSchema {
        object_type: "counterpart";
    }

    interface EntityUser extends Monite.CommonSchema {
        object_type: "entity_user";
    }

    interface Entity extends Monite.CommonSchema {
        object_type: "entity";
    }

    interface EntityVatIds extends Monite.CommonSchema {
        object_type: "entity_vat_ids";
    }

    interface CounterpartVatId extends Monite.CommonSchema {
        object_type: "counterpart_vat_id";
    }

    interface EntityBankAccount extends Monite.CommonSchema {
        object_type: "entity_bank_account";
    }

    interface Export extends Monite.CommonSchema {
        object_type: "export";
    }

    interface Mailbox extends Monite.CommonSchema {
        object_type: "mailbox";
    }

    interface PayablesPurchaseOrder extends Monite.CommonSchema {
        object_type: "payables_purchase_order";
    }

    interface PaymentReminder extends Monite.CommonSchema {
        object_type: "payment_reminder";
    }

    interface OverdueReminder extends Monite.CommonSchema {
        object_type: "overdue_reminder";
    }

    interface Product extends Monite.CommonSchema {
        object_type: "product";
    }

    interface Project extends Monite.CommonSchema {
        object_type: "project";
    }

    interface Receivable extends Monite.CommonSchema {
        object_type: "receivable";
    }

    interface Reconciliation extends Monite.CommonSchema {
        object_type: "reconciliation";
    }

    interface Role extends Monite.CommonSchema {
        object_type: "role";
    }

    interface Tag extends Monite.CommonSchema {
        object_type: "tag";
    }

    interface TodoTask extends Monite.CommonSchema {
        object_type: "todo_task";
    }

    interface TodoTaskMute extends Monite.CommonSchema {
        object_type: "todo_task_mute";
    }

    interface Transaction extends Monite.CommonSchema {
        object_type: "transaction";
    }

    interface Workflow extends Monite.CommonSchema {
        object_type: "workflow";
    }

    interface ApprovalRequest extends Monite.CommonSchema {
        object_type: "approval_request";
    }

    interface ApprovalPolicy extends Monite.CommonSchema {
        object_type: "approval_policy";
    }

    interface PaymentRecord extends Monite.CommonSchema {
        object_type: "payment_record";
    }

    interface Payable extends Monite.PayableSchema {
        object_type: "payable";
    }
}
