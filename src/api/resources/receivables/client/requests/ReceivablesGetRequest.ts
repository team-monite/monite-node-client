/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Monite from "../../../../index";

/**
 * @example
 *     {}
 */
export interface ReceivablesGetRequest {
    /**
     * Sort order (ascending by default). Typically used together with the `sort` parameter.
     */
    order?: Monite.OrderEnum;
    /**
     * The number of items (0 .. 100) to return in a single page of the response. The response may contain fewer items if it is the last or only page.
     *
     * When using pagination with a non-default `limit`, you must provide the `limit` value alongside `pagination_token` in all subsequent pagination requests. Unlike other query parameters, `limit` is not inferred from `pagination_token`.
     */
    limit?: number;
    /**
     * A pagination token obtained from a previous call to this endpoint. Use it to get the next or previous page of results for your initial query. If `pagination_token` is specified, all other query parameters except `limit` are ignored and inferred from the initial query.
     *
     * If not specified, the first page of results will be returned.
     */
    pagination_token?: string;
    /**
     * Return only receivables with the specified IDs. Valid but nonexistent IDs do not raise errors but produce no results.
     *
     * To specify multiple IDs, repeat this parameter for each value:
     * `id__in=<id1>&id__in=<id2>`
     */
    id__in?: string | string[];
    /**
     * Return only receivables that have the specified statuses. See the applicable [invoice statuses](https://docs.monite.com/accounts-receivable/invoices/index), [quote statuses](https://docs.monite.com/accounts-receivable/quotes/index), and [credit note statuses](https://docs.monite.com/accounts-receivable/credit-notes#credit-note-lifecycle).
     *
     * To specify multiple statuses, repeat this parameter for each value:
     * `status__in=draft&status__in=issued`
     */
    status__in?: Monite.ReceivablesGetRequestStatusInItem | Monite.ReceivablesGetRequestStatusInItem[];
    /**
     * Return only receivables created by the entity users with the specified IDs.To specify multiple user IDs, repeat this parameter for each ID:
     * `entity_user_id__in=<user1>&entity_user_id__in=<user2>`
     *
     * If the request is authenticated using an entity user token, this user must have the `receivable.read.allowed` (rather than `allowed_for_own`) permission to be able to query receivables created by other users.
     *
     * IDs of deleted users will still produce results here if those users had associated receivables. Valid but nonexistent user IDs do not raise errors but produce no results.
     */
    entity_user_id__in?: string | string[];
    /**
     * The field to sort the results by. Typically used together with the `order` parameter.
     */
    sort?: Monite.ReceivableCursorFields;
    /**
     * Return only receivables whose [tags](https://docs.monite.com/common/tags) include at least one of the tags with the specified IDs.
     *
     * For example, given receivables with the following tags:
     * 1. tagA
     * 2. tagB
     * 3. tagA, tagB
     * 4. tagC
     * 5. tagB, tagC
     *
     *
     * `tag_ids__in=<tagA>&tag_ids__in=<tagB>` will return receivables 1, 2, 3, and 5.
     *
     * Valid but nonexistent tag IDs do not raise errors but produce no results.
     */
    tag_ids__in?: string | string[];
    /**
     * Return only receivables whose [tags](https://docs.monite.com/common/tags) include all of the tags with the specified IDs and optionally other tags that are not specified.
     *
     * For example, given receivables with the following tags:
     * 1. tagA
     * 2. tagB
     * 3. tagA, tagB
     * 4. tagC
     * 5. tagA, tagB, tagC
     *
     *
     * `tag_ids=<tagA>&tag_ids=<tagB>` will return receivables 3 and 5.
     */
    tag_ids?: string | string[];
    type?: Monite.ReceivableType;
    document_id?: string;
    document_id__contains?: string;
    document_id__icontains?: string;
    issue_date__gt?: string;
    issue_date__lt?: string;
    issue_date__gte?: string;
    issue_date__lte?: string;
    created_at__gt?: string;
    created_at__lt?: string;
    created_at__gte?: string;
    created_at__lte?: string;
    counterpart_id?: string;
    counterpart_name?: string;
    counterpart_name__contains?: string;
    counterpart_name__icontains?: string;
    total_amount?: number;
    total_amount__gt?: number;
    total_amount__lt?: number;
    total_amount__gte?: number;
    total_amount__lte?: number;
    status?: Monite.ReceivablesGetRequestStatus;
    entity_user_id?: string;
    based_on?: string;
    due_date__gt?: string;
    due_date__lt?: string;
    due_date__gte?: string;
    due_date__lte?: string;
    project_id?: string;
}
