/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { MoniteClient } from "../../src/Client";

describe("Receivables", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            data: [
                {
                    id: "id",
                    created_at: "2024-01-15T09:30:00Z",
                    updated_at: "2024-01-15T09:30:00Z",
                    based_on: "based_on",
                    based_on_document_id: "based_on_document_id",
                    comment: "comment",
                    commercial_condition_description: "commercial_condition_description",
                    counterpart_billing_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_business_type: "counterpart_business_type",
                    counterpart_contact: {
                        address: { city: "Berlin", country: "AF", line1: "Flughafenstrasse 52", postal_code: "10115" },
                        email: "marge@example.org",
                        first_name: "Marge",
                        last_name: "Smith",
                        phone: "55512378654",
                        title: "Dr.",
                    },
                    counterpart_external_reference: "counterpart_external_reference",
                    counterpart_id: "counterpart_id",
                    counterpart_name: "counterpart_name",
                    counterpart_shipping_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_tax_id: "counterpart_tax_id",
                    counterpart_type: "individual",
                    counterpart_vat_id: { id: "id", counterpart_id: "counterpart_id", value: "123456789" },
                    currency: "AED",
                    deduction_amount: 1,
                    deduction_memo: "deduction_memo",
                    discount: { amount: 1, type: "amount" },
                    discounted_subtotal: 1,
                    document_id: "document_id",
                    due_date: "due_date",
                    einvoice_file_url: "einvoice_file_url",
                    entity: { name: "name", type: "organization" },
                    entity_address: { city: "city", line1: "line1", postal_code: "postal_code" },
                    entity_user_id: "entity_user_id",
                    entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", value: "123456789" },
                    expiry_date: "expiry_date",
                    file_language: "ab",
                    file_url: "file_url",
                    footer: "footer",
                    issue_date: "2024-01-15T09:30:00Z",
                    line_items: [
                        {
                            product: {
                                id: "id",
                                external_reference: "HT-1234-S-BL",
                                name: "name",
                                price: { currency: "AED", value: 1 },
                                price_after_vat: { currency: "AED", value: 1 },
                                vat_rate: { country: "AF", value: 1 },
                            },
                            quantity: 1.1,
                            total_after_vat: 1,
                            total_before_vat: 1,
                        },
                    ],
                    memo: "memo",
                    original_file_language: "ab",
                    original_file_url: "original_file_url",
                    partner_metadata: { key: "value" },
                    project_id: "project_id",
                    quote_accept_page_url: "quote_accept_page_url",
                    signature_required: true,
                    status: "draft",
                    subtotal: 1,
                    subtotal_after_vat: 1,
                    tags: [
                        {
                            id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            created_at: "2022-09-07T16:35:18Z",
                            updated_at: "2022-09-07T16:35:18Z",
                            created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            description: "Tag for the Marketing Department",
                            name: "Marketing",
                        },
                    ],
                    total_amount: 1,
                    total_vat_amount: 1,
                    total_vat_amounts: [{ amount: 1, taxable_amount: 1, value: 1 }],
                    total_withholding_tax: 1,
                    trade_name: "trade_name",
                    vat_exempt: true,
                    vat_exemption_rationale: "vat_exemption_rationale",
                    vat_inclusive_discount_mode: "exclusive",
                    vat_mode: "exclusive",
                    withholding_tax_rate: 1,
                    type: "quote",
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        };
        server.mockEndpoint().get("/receivables").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.receivables.get();
        expect(response).toEqual({
            data: [
                {
                    type: "quote",
                    id: "id",
                    created_at: "2024-01-15T09:30:00Z",
                    updated_at: "2024-01-15T09:30:00Z",
                    based_on: "based_on",
                    based_on_document_id: "based_on_document_id",
                    comment: "comment",
                    commercial_condition_description: "commercial_condition_description",
                    counterpart_billing_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_business_type: "counterpart_business_type",
                    counterpart_contact: {
                        address: {
                            city: "Berlin",
                            country: "AF",
                            line1: "Flughafenstrasse 52",
                            postal_code: "10115",
                        },
                        email: "marge@example.org",
                        first_name: "Marge",
                        last_name: "Smith",
                        phone: "55512378654",
                        title: "Dr.",
                    },
                    counterpart_external_reference: "counterpart_external_reference",
                    counterpart_id: "counterpart_id",
                    counterpart_name: "counterpart_name",
                    counterpart_shipping_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_tax_id: "counterpart_tax_id",
                    counterpart_type: "individual",
                    counterpart_vat_id: {
                        id: "id",
                        counterpart_id: "counterpart_id",
                        value: "123456789",
                    },
                    currency: "AED",
                    deduction_amount: 1,
                    deduction_memo: "deduction_memo",
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    discounted_subtotal: 1,
                    document_id: "document_id",
                    due_date: "due_date",
                    einvoice_file_url: "einvoice_file_url",
                    entity: {
                        type: "organization",
                        name: "name",
                    },
                    entity_address: {
                        city: "city",
                        line1: "line1",
                        postal_code: "postal_code",
                    },
                    entity_user_id: "entity_user_id",
                    entity_vat_id: {
                        id: "id",
                        country: "AF",
                        entity_id: "entity_id",
                        value: "123456789",
                    },
                    expiry_date: "expiry_date",
                    file_language: "ab",
                    file_url: "file_url",
                    footer: "footer",
                    issue_date: "2024-01-15T09:30:00Z",
                    line_items: [
                        {
                            product: {
                                id: "id",
                                external_reference: "HT-1234-S-BL",
                                name: "name",
                                price: {
                                    currency: "AED",
                                    value: 1,
                                },
                                price_after_vat: {
                                    currency: "AED",
                                    value: 1,
                                },
                                vat_rate: {
                                    country: "AF",
                                    value: 1,
                                },
                            },
                            quantity: 1.1,
                            total_after_vat: 1,
                            total_before_vat: 1,
                        },
                    ],
                    memo: "memo",
                    original_file_language: "ab",
                    original_file_url: "original_file_url",
                    partner_metadata: {
                        key: "value",
                    },
                    project_id: "project_id",
                    quote_accept_page_url: "quote_accept_page_url",
                    signature_required: true,
                    status: "draft",
                    subtotal: 1,
                    subtotal_after_vat: 1,
                    tags: [
                        {
                            id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            created_at: "2022-09-07T16:35:18Z",
                            updated_at: "2022-09-07T16:35:18Z",
                            created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            description: "Tag for the Marketing Department",
                            name: "Marketing",
                        },
                    ],
                    total_amount: 1,
                    total_vat_amount: 1,
                    total_vat_amounts: [
                        {
                            amount: 1,
                            taxable_amount: 1,
                            value: 1,
                        },
                    ],
                    total_withholding_tax: 1,
                    trade_name: "trade_name",
                    vat_exempt: true,
                    vat_exemption_rationale: "vat_exemption_rationale",
                    vat_inclusive_discount_mode: "exclusive",
                    vat_mode: "exclusive",
                    withholding_tax_rate: 1,
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {
            counterpart_billing_address_id: "counterpart_billing_address_id",
            counterpart_id: "counterpart_id",
            currency: "AED",
            line_items: [{ quantity: 1.1 }],
            type: "quote",
        };
        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .post("/receivables")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.create({
            counterpart_billing_address_id: "counterpart_billing_address_id",
            counterpart_id: "counterpart_id",
            currency: "AED",
            line_items: [
                {
                    quantity: 1.1,
                },
            ],
            type: "quote",
        });
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("get_receivables_required_fields", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            counterpart: {
                tax_id: {
                    description:
                        "The counterpart's taxpayer identification number or tax ID. For identification purposes, this field may be required for counterparts that are not VAT-registered.",
                    required: false,
                },
                vat_id: {
                    description:
                        "The counterpart's VAT (Value Added Tax) identification number. This field is required for counterparts that are VAT-registered.",
                    required: true,
                },
            },
            entity: {
                tax_id: {
                    description:
                        "The entity's taxpayer identification number or tax ID. This field is required for entities that are non-VAT registered.",
                    required: false,
                },
                vat_id: {
                    description:
                        "The entity's VAT (Value Added Tax) identification number. This field is required for entities that are VAT-registered.",
                    required: true,
                },
            },
            line_item: {
                measure_unit: {
                    description: "Unit used to measure the quantity of the product (e.g. items, meters, kilograms)",
                    required: true,
                },
                tax_rate_value: {
                    description:
                        "Percent minor units. Example: 12.5% is 1250. This field is only required on invoices issued by entities in the US, Pakistan, and other unsupported countries.",
                    required: false,
                },
                vat_rate_id: {
                    description:
                        "Unique identifier of the vat rate object. This field is required for all entities in supported countries except the US and Pakistan.",
                    required: true,
                },
            },
        };
        server
            .mockEndpoint()
            .get("/receivables/required_fields")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getReceivablesRequiredFields();
        expect(response).toEqual({
            counterpart: {
                tax_id: {
                    description:
                        "The counterpart's taxpayer identification number or tax ID. For identification purposes, this field may be required for counterparts that are not VAT-registered.",
                    required: false,
                },
                vat_id: {
                    description:
                        "The counterpart's VAT (Value Added Tax) identification number. This field is required for counterparts that are VAT-registered.",
                    required: true,
                },
            },
            entity: {
                tax_id: {
                    description:
                        "The entity's taxpayer identification number or tax ID. This field is required for entities that are non-VAT registered.",
                    required: false,
                },
                vat_id: {
                    description:
                        "The entity's VAT (Value Added Tax) identification number. This field is required for entities that are VAT-registered.",
                    required: true,
                },
            },
            line_item: {
                measure_unit: {
                    description: "Unit used to measure the quantity of the product (e.g. items, meters, kilograms)",
                    required: true,
                },
                tax_rate_value: {
                    description:
                        "Percent minor units. Example: 12.5% is 1250. This field is only required on invoices issued by entities in the US, Pakistan, and other unsupported countries.",
                    required: false,
                },
                vat_rate_id: {
                    description:
                        "Unique identifier of the vat rate object. This field is required for all entities in supported countries except the US and Pakistan.",
                    required: true,
                },
            },
        });
    });

    test("post_receivables_search", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {};
        const rawResponseBody = {
            data: [
                {
                    id: "id",
                    created_at: "2024-01-15T09:30:00Z",
                    updated_at: "2024-01-15T09:30:00Z",
                    based_on: "based_on",
                    based_on_document_id: "based_on_document_id",
                    comment: "comment",
                    commercial_condition_description: "commercial_condition_description",
                    counterpart_billing_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_business_type: "counterpart_business_type",
                    counterpart_contact: {
                        address: { city: "Berlin", country: "AF", line1: "Flughafenstrasse 52", postal_code: "10115" },
                        email: "marge@example.org",
                        first_name: "Marge",
                        last_name: "Smith",
                        phone: "55512378654",
                        title: "Dr.",
                    },
                    counterpart_external_reference: "counterpart_external_reference",
                    counterpart_id: "counterpart_id",
                    counterpart_name: "counterpart_name",
                    counterpart_shipping_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_tax_id: "counterpart_tax_id",
                    counterpart_type: "individual",
                    counterpart_vat_id: { id: "id", counterpart_id: "counterpart_id", value: "123456789" },
                    currency: "AED",
                    deduction_amount: 1,
                    deduction_memo: "deduction_memo",
                    discount: { amount: 1, type: "amount" },
                    discounted_subtotal: 1,
                    document_id: "document_id",
                    due_date: "due_date",
                    einvoice_file_url: "einvoice_file_url",
                    entity: { name: "name", type: "organization" },
                    entity_address: { city: "city", line1: "line1", postal_code: "postal_code" },
                    entity_user_id: "entity_user_id",
                    entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", value: "123456789" },
                    expiry_date: "expiry_date",
                    file_language: "ab",
                    file_url: "file_url",
                    footer: "footer",
                    issue_date: "2024-01-15T09:30:00Z",
                    line_items: [
                        {
                            product: {
                                id: "id",
                                external_reference: "HT-1234-S-BL",
                                name: "name",
                                price: { currency: "AED", value: 1 },
                                price_after_vat: { currency: "AED", value: 1 },
                                vat_rate: { country: "AF", value: 1 },
                            },
                            quantity: 1.1,
                            total_after_vat: 1,
                            total_before_vat: 1,
                        },
                    ],
                    memo: "memo",
                    original_file_language: "ab",
                    original_file_url: "original_file_url",
                    partner_metadata: { key: "value" },
                    project_id: "project_id",
                    quote_accept_page_url: "quote_accept_page_url",
                    signature_required: true,
                    status: "draft",
                    subtotal: 1,
                    subtotal_after_vat: 1,
                    tags: [
                        {
                            id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            created_at: "2022-09-07T16:35:18Z",
                            updated_at: "2022-09-07T16:35:18Z",
                            created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            description: "Tag for the Marketing Department",
                            name: "Marketing",
                        },
                    ],
                    total_amount: 1,
                    total_vat_amount: 1,
                    total_vat_amounts: [{ amount: 1, taxable_amount: 1, value: 1 }],
                    total_withholding_tax: 1,
                    trade_name: "trade_name",
                    vat_exempt: true,
                    vat_exemption_rationale: "vat_exemption_rationale",
                    vat_inclusive_discount_mode: "exclusive",
                    vat_mode: "exclusive",
                    withholding_tax_rate: 1,
                    type: "quote",
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        };
        server
            .mockEndpoint()
            .post("/receivables/search")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.postReceivablesSearch();
        expect(response).toEqual({
            data: [
                {
                    type: "quote",
                    id: "id",
                    created_at: "2024-01-15T09:30:00Z",
                    updated_at: "2024-01-15T09:30:00Z",
                    based_on: "based_on",
                    based_on_document_id: "based_on_document_id",
                    comment: "comment",
                    commercial_condition_description: "commercial_condition_description",
                    counterpart_billing_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_business_type: "counterpart_business_type",
                    counterpart_contact: {
                        address: {
                            city: "Berlin",
                            country: "AF",
                            line1: "Flughafenstrasse 52",
                            postal_code: "10115",
                        },
                        email: "marge@example.org",
                        first_name: "Marge",
                        last_name: "Smith",
                        phone: "55512378654",
                        title: "Dr.",
                    },
                    counterpart_external_reference: "counterpart_external_reference",
                    counterpart_id: "counterpart_id",
                    counterpart_name: "counterpart_name",
                    counterpart_shipping_address: {
                        city: "Berlin",
                        country: "AF",
                        line1: "Flughafenstrasse 52",
                        postal_code: "10115",
                    },
                    counterpart_tax_id: "counterpart_tax_id",
                    counterpart_type: "individual",
                    counterpart_vat_id: {
                        id: "id",
                        counterpart_id: "counterpart_id",
                        value: "123456789",
                    },
                    currency: "AED",
                    deduction_amount: 1,
                    deduction_memo: "deduction_memo",
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    discounted_subtotal: 1,
                    document_id: "document_id",
                    due_date: "due_date",
                    einvoice_file_url: "einvoice_file_url",
                    entity: {
                        type: "organization",
                        name: "name",
                    },
                    entity_address: {
                        city: "city",
                        line1: "line1",
                        postal_code: "postal_code",
                    },
                    entity_user_id: "entity_user_id",
                    entity_vat_id: {
                        id: "id",
                        country: "AF",
                        entity_id: "entity_id",
                        value: "123456789",
                    },
                    expiry_date: "expiry_date",
                    file_language: "ab",
                    file_url: "file_url",
                    footer: "footer",
                    issue_date: "2024-01-15T09:30:00Z",
                    line_items: [
                        {
                            product: {
                                id: "id",
                                external_reference: "HT-1234-S-BL",
                                name: "name",
                                price: {
                                    currency: "AED",
                                    value: 1,
                                },
                                price_after_vat: {
                                    currency: "AED",
                                    value: 1,
                                },
                                vat_rate: {
                                    country: "AF",
                                    value: 1,
                                },
                            },
                            quantity: 1.1,
                            total_after_vat: 1,
                            total_before_vat: 1,
                        },
                    ],
                    memo: "memo",
                    original_file_language: "ab",
                    original_file_url: "original_file_url",
                    partner_metadata: {
                        key: "value",
                    },
                    project_id: "project_id",
                    quote_accept_page_url: "quote_accept_page_url",
                    signature_required: true,
                    status: "draft",
                    subtotal: 1,
                    subtotal_after_vat: 1,
                    tags: [
                        {
                            id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            created_at: "2022-09-07T16:35:18Z",
                            updated_at: "2022-09-07T16:35:18Z",
                            created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                            description: "Tag for the Marketing Department",
                            name: "Marketing",
                        },
                    ],
                    total_amount: 1,
                    total_vat_amount: 1,
                    total_vat_amounts: [
                        {
                            amount: 1,
                            taxable_amount: 1,
                            value: 1,
                        },
                    ],
                    total_withholding_tax: 1,
                    trade_name: "trade_name",
                    vat_exempt: true,
                    vat_exemption_rationale: "vat_exemption_rationale",
                    vat_inclusive_discount_mode: "exclusive",
                    vat_mode: "exclusive",
                    withholding_tax_rate: 1,
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        });
    });

    test("get_variables", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            data: [
                {
                    object_subtype: "quote",
                    object_type: "object_type",
                    variables: [{ description: "description", name: "name" }],
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/receivables/variables")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getVariables();
        expect(response).toEqual({
            data: [
                {
                    object_subtype: "quote",
                    object_type: "object_type",
                    variables: [
                        {
                            description: "description",
                            name: "name",
                        },
                    ],
                },
            ],
        });
    });

    test("get_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .get("/receivables/receivable_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getById("receivable_id");
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("delete_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        server.mockEndpoint().delete("/receivables/receivable_id").respondWith().statusCode(200).build();

        const response = await client.receivables.deleteById("receivable_id");
        expect(response).toEqual(undefined);
    });

    test("update_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { quote: {} };
        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .patch("/receivables/receivable_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.updateById("receivable_id", {
            quote: {},
        });
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("accept_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {};
        const rawResponseBody = { success: true };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/accept")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.acceptById("receivable_id");
        expect(response).toEqual({
            success: true,
        });
    });

    test("cancel_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        server.mockEndpoint().post("/receivables/receivable_id/cancel").respondWith().statusCode(200).build();

        const response = await client.receivables.cancelById("receivable_id");
        expect(response).toEqual(undefined);
    });

    test("clone_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/clone")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.cloneById("receivable_id");
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("decline_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {};
        const rawResponseBody = { success: true };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/decline")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.declineById("receivable_id");
        expect(response).toEqual({
            success: true,
        });
    });

    test("get_history", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            data: [
                {
                    id: "cd58435b-1c79-4b17-9f79-f898c93e5f97",
                    current_pdf_url: "https://monite-file-saver.example.com/12345/67890.pdf",
                    entity_user_id: "d5a577b0-01c0-4566-ac5c-44f41935e8c4",
                    event_data: { new_status: "draft", old_status: "draft" },
                    event_type: "status_changed",
                    receivable_id: "f669a8a4-0563-4ab9-b54f-e9d700d282c5",
                    timestamp: "2024-01-15T09:30:00Z",
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        };
        server
            .mockEndpoint()
            .get("/receivables/receivable_id/history")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getHistory("receivable_id");
        expect(response).toEqual({
            data: [
                {
                    id: "cd58435b-1c79-4b17-9f79-f898c93e5f97",
                    current_pdf_url: "https://monite-file-saver.example.com/12345/67890.pdf",
                    entity_user_id: "d5a577b0-01c0-4566-ac5c-44f41935e8c4",
                    event_data: {
                        new_status: "draft",
                        old_status: "draft",
                    },
                    event_type: "status_changed",
                    receivable_id: "f669a8a4-0563-4ab9-b54f-e9d700d282c5",
                    timestamp: "2024-01-15T09:30:00Z",
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        });
    });

    test("get_history_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            id: "cd58435b-1c79-4b17-9f79-f898c93e5f97",
            current_pdf_url: "https://monite-file-saver.example.com/12345/67890.pdf",
            entity_user_id: "d5a577b0-01c0-4566-ac5c-44f41935e8c4",
            event_data: { new_status: "draft", old_status: "draft" },
            event_type: "status_changed",
            receivable_id: "f669a8a4-0563-4ab9-b54f-e9d700d282c5",
            timestamp: "2024-01-15T09:30:00Z",
        };
        server
            .mockEndpoint()
            .get("/receivables/receivable_id/history/receivable_history_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getHistoryById("receivable_history_id", "receivable_id");
        expect(response).toEqual({
            id: "cd58435b-1c79-4b17-9f79-f898c93e5f97",
            current_pdf_url: "https://monite-file-saver.example.com/12345/67890.pdf",
            entity_user_id: "d5a577b0-01c0-4566-ac5c-44f41935e8c4",
            event_data: {
                new_status: "draft",
                old_status: "draft",
            },
            event_type: "status_changed",
            receivable_id: "f669a8a4-0563-4ab9-b54f-e9d700d282c5",
            timestamp: "2024-01-15T09:30:00Z",
        });
    });

    test("issue_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/issue")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.issueById("receivable_id");
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("update_line_items_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { data: [{ quantity: 1.1 }] };
        const rawResponseBody = {
            data: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
        };
        server
            .mockEndpoint()
            .put("/receivables/receivable_id/line_items")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.updateLineItemsById("receivable_id", {
            data: [
                {
                    quantity: 1.1,
                },
            ],
        });
        expect(response).toEqual({
            data: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
        });
    });

    test("get_mails", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            data: [
                { id: "id", created_at: "2024-01-15T09:30:00Z", updated_at: "2024-01-15T09:30:00Z", status: "pending" },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        };
        server
            .mockEndpoint()
            .get("/receivables/receivable_id/mails")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getMails("receivable_id");
        expect(response).toEqual({
            data: [
                {
                    id: "id",
                    created_at: "2024-01-15T09:30:00Z",
                    updated_at: "2024-01-15T09:30:00Z",
                    status: "pending",
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        });
    });

    test("get_mail_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            recipients: {
                bcc: [{ email: "email", is_success: true }],
                cc: [{ email: "email", is_success: true }],
                to: [{ email: "email", is_success: true }],
            },
            status: "pending",
        };
        server
            .mockEndpoint()
            .get("/receivables/receivable_id/mails/mail_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getMailById("receivable_id", "mail_id");
        expect(response).toEqual({
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            recipients: {
                bcc: [
                    {
                        email: "email",
                        is_success: true,
                    },
                ],
                cc: [
                    {
                        email: "email",
                        is_success: true,
                    },
                ],
                to: [
                    {
                        email: "email",
                        is_success: true,
                    },
                ],
            },
            status: "pending",
        });
    });

    test("mark_as_paid_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {};
        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/mark_as_paid")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.markAsPaidById("receivable_id");
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("mark_as_partially_paid_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { amount_paid: 1 };
        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/mark_as_partially_paid")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.markAsPartiallyPaidById("receivable_id", {
            amount_paid: 1,
        });
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("mark_as_uncollectible_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {};
        const rawResponseBody = {
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: { amount: 1, type: "amount", value: 1 },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
                type: "organization",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: { id: "id", country: "AF", entity_id: "entity_id", type: "ae_trn", value: "123456789" },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: { amount: 1, type: "amount" },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: { currency: "AED", value: 1 },
                        price_after_vat: { currency: "AED", value: 1 },
                        vat_rate: { country: "AF", value: 1 },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: { key: "value" },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [{ name: "name", value: 1.1, amount: 1 }],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
            type: "quote",
        };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/mark_as_uncollectible")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.markAsUncollectibleById("receivable_id");
        expect(response).toEqual({
            type: "quote",
            id: "id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            based_on: "based_on",
            based_on_document_id: "based_on_document_id",
            comment: "comment",
            commercial_condition_description: "commercial_condition_description",
            counterpart_billing_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_business_type: "counterpart_business_type",
            counterpart_contact: {
                address: {
                    id: "id",
                    city: "Berlin",
                    country: "AF",
                    line1: "Flughafenstrasse 52",
                    line2: "line2",
                    postal_code: "10115",
                    state: "state",
                },
                email: "marge@example.org",
                first_name: "Marge",
                last_name: "Smith",
                phone: "55512378654",
                title: "Dr.",
            },
            counterpart_external_reference: "counterpart_external_reference",
            counterpart_id: "counterpart_id",
            counterpart_name: "counterpart_name",
            counterpart_shipping_address: {
                id: "id",
                city: "Berlin",
                country: "AF",
                line1: "Flughafenstrasse 52",
                line2: "line2",
                postal_code: "10115",
                state: "state",
            },
            counterpart_tax_id: "counterpart_tax_id",
            counterpart_type: "individual",
            counterpart_vat_id: {
                id: "id",
                counterpart_id: "counterpart_id",
                country: "AF",
                type: "ae_trn",
                value: "123456789",
            },
            currency: "AED",
            deduction_amount: 1,
            deduction_memo: "deduction_memo",
            discount: {
                amount: 1,
                type: "amount",
                value: 1,
            },
            discounted_subtotal: 1,
            document_id: "document_id",
            due_date: "due_date",
            einvoice_file_url: "einvoice_file_url",
            entity: {
                type: "organization",
                email: "email",
                logo: "logo",
                name: "name",
                phone: "phone",
                registration_authority: "registration_authority",
                registration_number: "registration_number",
                tax_id: "tax_id",
                vat_id: "vat_id",
                website: "website",
            },
            entity_address: {
                city: "city",
                country: "AF",
                line1: "line1",
                line2: "line2",
                postal_code: "postal_code",
                state: "state",
            },
            entity_bank_account: {
                id: "id",
                account_holder_name: "account_holder_name",
                account_number: "account_number",
                bank_name: "bank_name",
                bic: "bic",
                iban: "iban",
                routing_number: "routing_number",
                sort_code: "sort_code",
            },
            entity_user_id: "entity_user_id",
            entity_vat_id: {
                id: "id",
                country: "AF",
                entity_id: "entity_id",
                type: "ae_trn",
                value: "123456789",
            },
            expiry_date: "expiry_date",
            file_language: "ab",
            file_url: "file_url",
            footer: "footer",
            issue_date: "2024-01-15T09:30:00Z",
            line_items: [
                {
                    discount: {
                        amount: 1,
                        type: "amount",
                    },
                    product: {
                        id: "id",
                        external_reference: "HT-1234-S-BL",
                        name: "name",
                        price: {
                            currency: "AED",
                            value: 1,
                        },
                        price_after_vat: {
                            currency: "AED",
                            value: 1,
                        },
                        vat_rate: {
                            country: "AF",
                            value: 1,
                        },
                    },
                    quantity: 1.1,
                    total_after_vat: 1,
                    total_before_vat: 1,
                },
            ],
            memo: "memo",
            original_file_language: "ab",
            original_file_url: "original_file_url",
            partner_metadata: {
                key: "value",
            },
            project_id: "project_id",
            quote_accept_page_url: "quote_accept_page_url",
            signature_required: true,
            status: "draft",
            subtotal: 1,
            subtotal_after_vat: 1,
            tags: [
                {
                    id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    created_at: "2022-09-07T16:35:18Z",
                    updated_at: "2022-09-07T16:35:18Z",
                    category: "document_type",
                    created_by_entity_user_id: "ea837e28-509b-4b6a-a600-d54b6aa0b1f5",
                    description: "Tag for the Marketing Department",
                    name: "Marketing",
                },
            ],
            total_amount: 1,
            total_vat_amount: 1,
            total_vat_amounts: [
                {
                    id: "id",
                    amount: 1,
                    components: [
                        {
                            name: "name",
                            value: 1.1,
                            amount: 1,
                        },
                    ],
                    name: "name",
                    taxable_amount: 1,
                    value: 1,
                },
            ],
            total_withholding_tax: 1,
            trade_name: "trade_name",
            vat_exempt: true,
            vat_exemption_rationale: "vat_exemption_rationale",
            vat_inclusive_discount_mode: "exclusive",
            vat_mode: "exclusive",
            withholding_tax_rate: 1,
        });
    });

    test("get_pdf_link_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = { file_url: "file_url", original_file_url: "original_file_url" };
        server
            .mockEndpoint()
            .get("/receivables/receivable_id/pdf_link")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.getPdfLinkById("receivable_id");
        expect(response).toEqual({
            file_url: "file_url",
            original_file_url: "original_file_url",
        });
    });

    test("preview_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { body_text: "body_text", subject_text: "subject_text" };
        const rawResponseBody = { body_preview: "body_preview", subject_preview: "subject_preview" };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/preview")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.previewById("receivable_id", {
            body_text: "body_text",
            subject_text: "subject_text",
        });
        expect(response).toEqual({
            body_preview: "body_preview",
            subject_preview: "subject_preview",
        });
    });

    test("send_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { body_text: "body_text", subject_text: "subject_text" };
        const rawResponseBody = { mail_id: "mail_id" };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/send")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.sendById("receivable_id", {
            body_text: "body_text",
            subject_text: "subject_text",
        });
        expect(response).toEqual({
            mail_id: "mail_id",
        });
    });

    test("send_test_reminder_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { reminder_type: "term_1" };
        const rawResponseBody = { mail_ids: ["mail_ids"] };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/send_test_reminder")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.sendTestReminderById("receivable_id", {
            reminder_type: "term_1",
        });
        expect(response).toEqual({
            mail_ids: ["mail_ids"],
        });
    });

    test("verify_by_id", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            errors: {
                counterpart: ["counterpart"],
                entity: ["entity"],
                products: [{ line_item_number: 1, missing_fields: ["missing_fields"] }],
                receivable: ["receivable"],
                vat_rates: ["vat_rates"],
            },
            warnings: { payment_reminders: "payment_reminders" },
        };
        server
            .mockEndpoint()
            .post("/receivables/receivable_id/verify")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.receivables.verifyById("receivable_id");
        expect(response).toEqual({
            errors: {
                counterpart: ["counterpart"],
                entity: ["entity"],
                products: [
                    {
                        line_item_number: 1,
                        missing_fields: ["missing_fields"],
                    },
                ],
                receivable: ["receivable"],
                vat_rates: ["vat_rates"],
            },
            warnings: {
                payment_reminders: "payment_reminders",
            },
        });
    });
});
