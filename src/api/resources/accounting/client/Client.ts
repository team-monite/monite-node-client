/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Payables } from "../resources/payables/client/Client.js";
import { Receivables } from "../resources/receivables/client/Client.js";
import { Connections } from "../resources/connections/client/Client.js";
import { SyncedRecords } from "../resources/syncedRecords/client/Client.js";
import { TaxRates } from "../resources/taxRates/client/Client.js";
import { LedgerAccounts } from "../resources/ledgerAccounts/client/Client.js";

export declare namespace Accounting {
    export interface Options {
        environment?: core.Supplier<environments.MoniteEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the x-monite-version header */
        moniteVersion: core.Supplier<string>;
        /** Override the x-monite-entity-id header */
        moniteEntityId?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }
}

export class Accounting {
    protected readonly _options: Accounting.Options;
    protected _payables: Payables | undefined;
    protected _receivables: Receivables | undefined;
    protected _connections: Connections | undefined;
    protected _syncedRecords: SyncedRecords | undefined;
    protected _taxRates: TaxRates | undefined;
    protected _ledgerAccounts: LedgerAccounts | undefined;

    constructor(_options: Accounting.Options) {
        this._options = _options;
    }

    public get payables(): Payables {
        return (this._payables ??= new Payables(this._options));
    }

    public get receivables(): Receivables {
        return (this._receivables ??= new Receivables(this._options));
    }

    public get connections(): Connections {
        return (this._connections ??= new Connections(this._options));
    }

    public get syncedRecords(): SyncedRecords {
        return (this._syncedRecords ??= new SyncedRecords(this._options));
    }

    public get taxRates(): TaxRates {
        return (this._taxRates ??= new TaxRates(this._options));
    }

    public get ledgerAccounts(): LedgerAccounts {
        return (this._ledgerAccounts ??= new LedgerAccounts(this._options));
    }
}
