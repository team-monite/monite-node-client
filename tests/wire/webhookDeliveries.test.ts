/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { MoniteClient } from "../../src/Client";

describe("WebhookDeliveries", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MoniteClient({
            token: "test",
            moniteVersion: "test",
            moniteEntityId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            data: [
                {
                    id: "id",
                    event_id: "event_id",
                    requests_made_count: 1,
                    response: "response",
                    response_status_code: 1,
                    url: "url",
                    was_successful: true,
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        };
        server
            .mockEndpoint()
            .get("/webhook_deliveries")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhookDeliveries.get();
        expect(response).toEqual({
            data: [
                {
                    id: "id",
                    event_id: "event_id",
                    requests_made_count: 1,
                    response: "response",
                    response_status_code: 1,
                    url: "url",
                    was_successful: true,
                },
            ],
            next_pagination_token: "next_pagination_token",
            prev_pagination_token: "prev_pagination_token",
        });
    });
});
